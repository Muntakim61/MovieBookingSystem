@{
    ViewData["Title"] = "Directors";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Directors</h2>

<div class="d-flex justify-content-between mb-3">
    <a asp-action="Create" class="btn btn-primary">Create Director Movie</a>
    <a class="btn btn-success" href="/Director/DownloadExcel">Download Director list (Excel)</a>
</div>

<link href="https://unpkg.com/tabulator-tables@5.4.3/dist/css/tabulator.min.css" rel="stylesheet" />
<script src="https://unpkg.com/tabulator-tables@5.4.3/dist/js/tabulator.min.js"></script>

<div id="director-table"></div>

<script>
    var table = new Tabulator("#director-table", {
        height: 500,
        layout: "fitColumns",
        ajaxURL: "/Director/GetDirectors",
        pagination: "remote",
        paginationSize: 10,
        ajaxConfig: "GET",
        ajaxResponse: function(url, params, response) {
            return response.data;
        },
        paginationDataReceived: {
            last_page: "last_page",
            data: "data"
        },
        columns: [
            { title: "ID", field: "directorId", visible: false },
            { title: "Name", field: "name", editor: "input" },
            { title: "Biography", field: "biography", editor: "input" },
            { title: "Date of Birth", field: "dateOfBirth", editor: "input" },
            {
                title: "Image",
                field: "imageUrl",
                formatter: function(cell) {
                    const url = cell.getValue();
                    return `<img src="${url}" alt="Director Image" style="height: 60px; border-radius: 5px;" />`;
                }
            },
                {
        title: "Actions",
        formatter: function(cell) {
            var data = cell.getRow().getData();
            return `
                <button class="btn btn-sm btn-warning me-1 edit-btn" data-id="${data.directorId}">Edit</button>
                <button class="btn btn-sm btn-danger delete-btn" data-id="${data.directorId}">Delete</button>
            `;
        },
        width: 180,
        hozAlign: "center",
        cellClick: function(e, cell) {
            const rowData = cell.getRow().getData();
            const id = rowData.directorId;

            if (e.target.classList.contains('edit-btn')) {
                console.log("Edit clicked. Row data:", rowData);
                window.location.href = '/Director/Edit/' + id;
            } else if (e.target.classList.contains('delete-btn')) {
                console.log("Delete clicked. Row data:", rowData);
                console.log("Redirecting to delete...");
                window.location.href = '/Director/Delete/' + id;
            }
        }
    }

        ]
    });

    


    table.on("cellEdited", function(cell) {
        let rowData = cell.getRow().getData();
        fetch("/Director/Edit/" + rowData.directorId, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(rowData)
        });
    });
</script>
