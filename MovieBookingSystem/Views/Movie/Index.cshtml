@model IEnumerable<MovieBookingSystem.Models.Movie>

@{
    ViewData["Title"] = "Movies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<<<<<<< HEAD
<h2 class="flex-row align-content-center">Movie</h2>
<p>
    <a class="btn btn-primary" href="/Movie/Create">Create New Movie</a>
</p>

<link href="https://unpkg.com/tabulator-tables@5.4.3/dist/css/tabulator.min.css" rel="stylesheet" />
<script src="https://unpkg.com/tabulator-tables@5.4.3/dist/js/tabulator.min.js"></script>
<div id="movie-table"></div>

<script>
    var table = new Tabulator("#movie-table", {
        height: 500,
        layout: "fitColumns",
        ajaxURL: "/Movie/GetMovies",
        pagination: "remote",
        paginationSize: 10,
        ajaxConfig: "GET",
        ajaxResponse: function(url, params, response){
            return response.data;
        },
        paginationDataReceived: {
            last_page: "last_page",
            data: "data"
        },
        columns: [
            { title: "ID", field: "movieId", visible: false },
            { title: "Title", field: "title", editor: "input" },
            { title: "Genre", field: "genre", editor: "input" },
            { title: "Release Date", field: "releaseDate", editor: "input" },
            { title: "Duration (min)", field: "duration", editor: "number" },
            { title: "Price", field: "price", editor: "number" },
            { title: "Director", field: "directorName" },
            {
                title: "Image",
                field: "imageUrl",
                formatter: function(cell) {
                    const url = cell.getValue();
                    return `<img src="${url}" alt="Director Image" style="height: 60px; border-radius: 5px;" />`;
                }
            },
            {
                title: "Actions",
                formatter: "buttonCross",
                width: 100,
                align: "center",
                cellClick: function (e, cell) {
                    var movieId = cell.getRow().getData().movieId;
                    fetch("/Movie/DeleteMovie", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(movieId)
                    }).then(() => table.replaceData());
                }
            }
        ],
        cellEdited: function (cell) {
            let rowData = cell.getRow().getData();
            fetch("/Movie/SaveMovie", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(rowData)
            });
=======

<h2>Movie List</h2>

<div class="d-flex justify-content-between mb-3">
    <a asp-action="Create" class="btn btn-primary">Create New Movie</a>
    <a class="btn btn-success" href="/Movie/DownloadExcel">Download Movie list (Excel)</a>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Genre</th>
            <th>Release Date</th>
            <th>Duration</th>
            <th>Price</th>
            <th>Director</th>
            <th>Image</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in Model)
        {
            <tr>
                <td>@movie.Title</td>
                <td>@movie.Genre</td>
                <td>@movie.ReleaseDate.ToShortDateString()</td>
                <td>@movie.Duration</td>
                <td>@movie.Price</td>
                <td>@movie.Director?.Name</td>
                <td>
                    @if (!string.IsNullOrEmpty(movie.ImageUrl))
                    {
                        <img src="@movie.ImageUrl" alt="Movie Image" style="height: 60px; border-radius: 5px;" />
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@movie.MovieId" class="btn btn-sm btn-warning">Edit</a>
                    <button class="btn btn-sm btn-danger" onclick="deleteMovie(@movie.MovieId)">Delete</button>
                </td>
            </tr>
>>>>>>> origin/ExcelFeatures
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function deleteMovie(id) {
            if (confirm("Are you sure you want to delete this movie?")) {
                fetch("/Movie/DeleteMovie", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(id)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert("Failed to delete movie.");
                    }
                });
            }
        }
    </script>
}
